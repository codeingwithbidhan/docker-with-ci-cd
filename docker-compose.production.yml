services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: laravel_app
    image: imbidhan/laravel-backend
    restart: always
    working_dir: /var/www
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - app_network
      - db_network
    depends_on:
      db:
        condition: service_started

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx/default.conf.prod:/etc/nginx/conf.d/default.conf    
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: react_app
    image: imbidhan/react-frontend
    restart: unless-stopped
    working_dir: /app
    networks:
      - app_network
    depends_on:
      - backend
  db:
    image: mysql:8
    container_name: mysql_db_prod
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - db_network

networks:
  app_network:
  db_network:

volumes:
  db_data: