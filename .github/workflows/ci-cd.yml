name: Docker laravel-react with CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Step 4: Build and Push Backend Image
      - name: Build & Push Laravel Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.production
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-backend:latest

      # Step 5: Build and Push React Frontend
      - name: Build & Push React Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.production
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/react-frontend:latest


      # Step 6: File Copy (docker-compose.production.yml ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡¶æ)
      - name: Copy Docker Compose File to Server
        uses: appleboy/scp-action@v0.1.7 # <--- ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ï‡¶™‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          source: "docker-compose.production.yml" 
          target: "/home/${{ secrets.SERVER_USER }}/docker-with-ci-cd"

      # Step 7: Deploy Containers (Start containers only)
      - name: Start Docker Containers
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          command_timeout: 15m

          # üí° ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®: ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶ï‡¶ï ‡¶≤‡¶æ‡¶á‡¶®‡ßá
          script: |
            # ‡ßß. ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶°‡¶ø‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶∞‡¶ø‡¶§‡ßá ‡¶Ø‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßç‡¶≤‡¶ø‡¶®‡¶Ü‡¶™
            mkdir -p /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            cd /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            sudo docker-compose -f docker-compose.production.yml down || true
            sudo docker image prune -f || true
            
            # ‡ß®. ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶ì ‡¶°‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶ú ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶è‡¶ï ‡¶≤‡¶æ‡¶á‡¶®‡ßá
            sudo bash -c 'DB_DATABASE=${{ secrets.DB_DATABASE }}; DB_USERNAME=${{ secrets.DB_USERNAME }}; DB_PASSWORD=${{ secrets.DB_PASSWORD }}; DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}; export DB_DATABASE DB_USERNAME DB_PASSWORD DB_ROOT_PASSWORD; docker-compose -f docker-compose.production.yml pull; docker-compose -f docker-compose.production.yml up -d --force-recreate --remove-orphans;'
            
            echo "Container startup command finished."
            
      # Step 8: Run Database Migrations
      - name: Run Database Migrations
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          command_timeout: 5m
          
          # üí° ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: Step 8 ‡¶è‡¶∞ ‡¶∏‡¶¨ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ï‡ßá sudo bash -c ‡¶¨‡ßç‡¶≤‡¶ï‡ßá‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ
          script: |
            cd /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            
            # LARAVEL ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶®‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶∏‡ßá‡¶ü
            LARAVEL_CONTAINER_NAME=$(sudo docker-compose -f docker-compose.production.yml ps -q backend)
            
            # ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç exec ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ï‡ßá sudo bash -c ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ
            sudo bash -c "
              LARAVEL_CONTAINER_NAME_CHECK=$(${LARAVEL_CONTAINER_NAME});

              if [ -n \"${LARAVEL_CONTAINER_NAME}\" ]; then
                echo 'Running Laravel Migrations...';
                
                # ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá DB Secrets ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶á‡¶®‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá (‡¶è‡¶ñ‡¶® ‡¶¶‡ßç‡¶¨‡ßà‡¶§ ‡¶â‡¶¶‡ßç‡¶ß‡ßÉ‡¶§‡¶ø ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡ßá‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶)
                docker exec \
                  -e DB_DATABASE='${{ secrets.DB_DATABASE }}' \
                  -e DB_USERNAME='${{ secrets.DB_USERNAME }}' \
                  -e DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
                  ${LARAVEL_CONTAINER_NAME} php artisan migrate --force;
                  
                docker exec ${LARAVEL_CONTAINER_NAME} php artisan cache:clear;
                echo 'Deployment successful!';
              else
                echo 'Error: Backend container not found for migration.';
                exit 1;
              fi
            "