name: Docker laravel-react with CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1-6: (Unchanged)
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push Laravel Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.production
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-backend:latest

      - name: Build & Push React Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.production
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/react-frontend:latest


      - name: Copy Docker Compose File to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          source: "docker-compose.production.yml" 
          target: "/home/${{ secrets.SERVER_USER }}/docker-with-ci-cd"

      # üí° ‡¶∏‡¶Ç‡¶∂‡ßã‡¶ß‡¶ø‡¶§ Step 7: ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ö‡ßá‡¶ï ‡¶ì ‡¶á‡¶Æ‡ßá‡¶ú ‡¶™‡ßÅ‡¶≤ ‡¶ï‡¶∞‡¶æ (sudo removed)
      - name: Pull Latest Docker Images & Create ENV
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          command_timeout: 20m 

          script: |
            TARGET_DIR=/home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            mkdir -p $TARGET_DIR
            cd $TARGET_DIR
            
            if [ ! -f "docker-compose.production.yml" ]; then
                echo "Error: docker-compose.production.yml file NOT FOUND in $TARGET_DIR";
                ls -la 
                exit 1;
            fi
            
            echo "Creating .env file from secrets..."
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" > .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" >> .env
            
            # SUDO REMOVED
            docker-compose -f docker-compose.production.yml down || true
            docker image prune -f || true
            
            echo "Starting Image Pull..."
            # SUDO REMOVED
            docker-compose -f docker-compose.production.yml pull
            echo "Image Pull Complete."

      # üîç ‡¶°‡¶æ‡¶Ø‡¶º‡¶æ‡¶ó‡¶®‡¶∏‡ßç‡¶ü‡¶ø‡¶ï ‡¶ß‡¶æ‡¶™: ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
      - name: Verify Docker Compose Content on Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          
          script: |
            cd /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            echo "--- VERIFYING CURRENT docker-compose.production.yml CONTENT ---"
            cat docker-compose.production.yml
            echo "---------------------------------------------------------------"

      # üí° ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏ Step 7.5: ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã ‡¶è‡¶¨‡¶Ç SUDO ‡¶∏‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã
      - name: Start Docker Containers (Extended Timeout)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          # üö® ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü: 10 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡ßç‡¶ü ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
          command_timeout: 10m 

          script: |
            cd /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            
            echo "Starting containers with up -d and waiting up to 10 minutes..."
            # SUDO REMOVED
            docker-compose -f docker-compose.production.yml up -d --force-recreate --remove-orphans
            
            echo "--- Checking Container Status Immediately ---"
            # SUDO REMOVED
            docker-compose -f docker-compose.production.yml ps
            
            echo "Container startup command finished."

      # Step 8: Run Database Migrations (SUDO removed)
      - name: Run Database Migrations and Debug Logs
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_PORT }}
          command_timeout: 5m
          
          script: |
            cd /home/${{ secrets.SERVER_USER }}/docker-with-ci-cd
            
            echo "Waiting 60 seconds for all containers to fully start and stabilize..."
            sleep 60
            
            # LARAVEL ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶®‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ (SUDO REMOVED)
            LARAVEL_CONTAINER_NAME=$(docker-compose -f docker-compose.production.yml ps -q backend) 
            
            if [ -n "$LARAVEL_CONTAINER_NAME" ]; then
              # SUDO REMOVED
              CONTAINER_STATUS=$(docker inspect -f '{{.State.Status}}' $LARAVEL_CONTAINER_NAME)

              if [ "$CONTAINER_STATUS" = "running" ]; then
                  echo "Backend container is RUNNING. Running Migrations...";
                  echo "Waiting 10 seconds for DB connection establishment...";
                  sleep 10
                  
                  # SUDO REMOVED
                  docker exec $LARAVEL_CONTAINER_NAME php artisan migrate --force;
                  docker exec $LARAVEL_CONTAINER_NAME php artisan cache:clear;
                  echo "Deployment successful!";
              else
                  echo "Error: Backend container found but status is NOT RUNNING ($CONTAINER_STATUS).";
                  
                  # üö® ‡¶°‡¶ø‡¶¨‡¶æ‡¶ó‡¶ø‡¶Ç: ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶®‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ï‡ßá‡¶® ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶∞ ‡¶≤‡¶ó ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ (SUDO REMOVED)
                  echo "--- Printing Backend Container Logs ---"
                  docker-compose -f docker-compose.production.yml logs backend
                  
                  # üö® ‡¶°‡¶ø‡¶¨‡¶æ‡¶ó‡¶ø‡¶Ç: ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶á‡¶®‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ï‡ßç‡¶∏‡¶ø‡¶ü ‡¶ï‡ßã‡¶° ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ (SUDO REMOVED)
                  echo "--- Container Status Check ---"
                  docker-compose -f docker-compose.production.yml ps
                  
                  exit 1;
              fi
            else
              echo "Error: Backend container not found. Checking logs...";
              # SUDO REMOVED
              docker-compose -f docker-compose.production.yml logs 
              docker-compose -f docker-compose.production.yml ps
              exit 1;
            fi
